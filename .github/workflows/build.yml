name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          path: ''

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --network-timeout 100000

      - name: Build App
        run: yarn run build
        env:
          CI: false
          DISABLE_ESLINT_PLUGIN: true
          REACT_APP_BASE_BUCKET_URL: ${{ secrets.REACT_APP_BASE_BUCKET_URL }}

      - name: Upload App Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}
          if-no-files-found: 'warn'
          path: |
            ${{ github.workspace }}/dist/**/*

      - name: Get Release Version
        id: get_version
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: battila7/get-version-action@v2

      - name: Release App
        id: create_app_release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ github.workspace }}/dist/**/*
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
